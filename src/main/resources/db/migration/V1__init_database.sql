-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;

CREATE EXTENSION postgis;
CREATE EXTENSION postgis_raster;

-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.

CREATE TABLE IF NOT EXISTS public.categories
(
    id serial NOT NULL,
    name character varying(128) NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone DEFAULT null,
    deleted timestamp with time zone DEFAULT null,
                          PRIMARY KEY (id)
    );

COMMENT ON TABLE public.categories
    IS 'stores the categories to group the ecosys services';

CREATE TABLE IF NOT EXISTS public.services
(
    id serial NOT NULL,
    name character varying(128) NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone DEFAULT null,
    deleted timestamp without time zone DEFAULT null,
    category_id integer NOT NULL,
    svg_path character(512),
    CONSTRAINT id_unique UNIQUE (id)
    );

COMMENT ON TABLE public.services
    IS 'ecosys services';

CREATE TABLE IF NOT EXISTS public.packages
(
    id serial NOT NULL,
    name character varying(128) NOT NULL,
    "default" boolean DEFAULT false,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone DEFAULT null,
    deleted timestamp without time zone DEFAULT null,
    PRIMARY KEY (id)
    );

COMMENT ON TABLE public.packages
    IS 'packages are used to group raster data';

CREATE TABLE IF NOT EXISTS public.uploaded_raster_data
(
    id serial NOT NULL,
    filename character varying(512) NOT NULL,
    name character varying(128) NOT NULL,
    tmp_table character varying(128) NOT NULL,
    PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.raster_tasks
(
    id serial NOT NULL,
    pid integer NOT NULL,
    start timestamp without time zone NOT NULL,
    "end" timestamp without time zone,
    uploaded_raster_data_id integer NOT NULL,
    rc integer,
    message character varying(4096),
    imported boolean DEFAULT false,
    PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.raster_data
(
    id serial NOT NULL,
    filename character varying(512) NOT NULL,
    name character varying(128) NOT NULL,
    tmp_table character varying(128) NOT NULL,
    dimension character varying(128),
    rast raster,
    service_id integer,
    package_id integer,
    raster_task_id integer,
    uploaded_raster_data_id integer,
    data_complete boolean,
    statistics character varying(128),
    PRIMARY KEY (id)
    );

CREATE INDEX IF NOT EXISTS raster_data_st_convexhull_idx
    ON public.raster_data USING gist
        (st_convexhull(rast))
    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.services
    ADD CONSTRAINT categories_id_fkey FOREIGN KEY (category_id)
    REFERENCES public.categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.raster_tasks
    ADD CONSTRAINT uploaded_raster_data_id_fkey FOREIGN KEY (uploaded_raster_data_id)
    REFERENCES public.uploaded_raster_data (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.raster_data
    ADD CONSTRAINT service_id_fkey FOREIGN KEY (service_id)
    REFERENCES public.services (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.raster_data
    ADD CONSTRAINT package_id_fkey FOREIGN KEY (package_id)
    REFERENCES public.packages (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.raster_data
    ADD CONSTRAINT raster_task_id_fkey FOREIGN KEY (raster_task_id)
    REFERENCES public.raster_tasks (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.raster_data
    ADD CONSTRAINT uploaded_raster_data_id_fkey FOREIGN KEY (uploaded_raster_data_id)
    REFERENCES public.uploaded_raster_data (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION
    NOT VALID;

INSERT INTO public.categories(name, created) VALUES ('Bereitstellende Ökosystemleistungen', NOW());
INSERT INTO public.categories(name, created) VALUES ('Kulturelle Ökosystemleistungen', NOW());
INSERT INTO public.categories(name, created) VALUES ('Regulierende Ökosystemleistungen', NOW());
INSERT INTO public.categories(name, created) VALUES ('Unterstützende Ökosystemleistungen', NOW());

INSERT INTO public.Services(name, created, svg_path, category_id) VALUES ('Nährstoffkreislauf', NOW(), 'static/svg/nahrung.svg', 1);
INSERT INTO public.Services(name, created, svg_path, category_id) VALUES ('Luftreinigung', NOW(), 'static/svg/wasser.svg', 1);
INSERT INTO public.Services(name, created, svg_path, category_id) VALUES ('Klimaregulierung', NOW(), 'static/svg/sport.svg', 1);
INSERT INTO public.Services(name, created, svg_path, category_id) VALUES ('Erleben der Natur', NOW(), 'static/svg/sport.svg', 2);
INSERT INTO public.Services(name, created, svg_path, category_id) VALUES ('Hochwasserregulierung', NOW(), 'static/svg/wasser.svg', 2);
INSERT INTO public.Services(name, created, svg_path, category_id) VALUES ('Bestäubungsleistung', NOW(), 'static/svg/nahrung.svg', 3);

INSERT INTO public.Packages(name, "default", created) VALUES ('ZAMG 2019', True, NOW());
INSERT INTO public.Packages(name, "default", created) VALUES ('Provider von Österreich 2017', False, NOW());
INSERT INTO public.Packages(name, "default", created) VALUES ('Open Data Organisation 2018', False, NOW());

END;